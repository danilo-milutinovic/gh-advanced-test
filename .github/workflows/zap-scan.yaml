name: "ZAP Scan - Public endpoint DAST Testing"

# To be changed based on the requirements
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Variables - to be changed as per requirements
env:
  TARGET_URL: "https://eod-ml3.appsdemo.se/"
  RETENTION_DAYS: 7
#  TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }} # Add this as a secret in your repository    

jobs:
  zap_scan:
    name: Perform DAST scanning of external application endpoint 
    runs-on: ubuntu-24.04

    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Create a Writable Directory for ZAP
      - name: Prepare Work Directory
        run: |
          mkdir -p zap-workdir
          chmod 777 zap-workdir

      # 3. Run ZAP Baseline Scan (allow step to continue on failure)
      - name: Run DAST Scan
        continue-on-error: true  # Allow the job to continue even if this step fails
        run: |
          docker run --rm \
          -v $(pwd)/zap-workdir:/zap/wrk \
          -t ghcr.io/zaproxy/zaproxy zap-baseline.py \
          -t ${{ env.TARGET_URL }} \
          -r zap_report.html || true

      # 4. Upload ZAP Scan Report as Artifact (runs regardless of scan result)
      - name: Upload DAST Scan Report
        if: always()  # Ensure this step runs even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: Dast_Scan_Report
          path: zap-workdir/zap_report.html
          retention-days: ${{ env.RETENTION_DAYS }}
      
      # 5. Analyze ZAP Scan Report and Notify Teams
      #- name: Notify Microsoft Teams on Vulnerability Detection
      #  if: always()  # Runs regardless of previous step's success
      #  run: |
      #    if grep -q "FAIL-NEW" zap-workdir/zap_report.html; then
      #      curl -H 'Content-Type: application/json' -d '{
      #        "title": "ZAP Scan Vulnerability Detected",
      #        "text": "Vulnerabilities have been detected during the ZAP scan. Please review the report."
      #      }' "${{ env.TEAMS_WEBHOOK_URL }}"
      #    else
      #      echo "No vulnerabilities detected. Teams notification not sent."    