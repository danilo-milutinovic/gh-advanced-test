name: "ZAP Scan - Public endpoint DAST Testing"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  TARGET_URL: "https://eod-ml3.appsdemo.se/"
  RETENTION_DAYS: 7
  # TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }} # Add this as a secret in your repository

jobs:
  zap_scan:
    name: Perform DAST scanning of external application endpoint
    runs-on: ubuntu-24.04

    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Cache ZAP Docker Image
      - name: Cache ZAP Docker Image
        id: cache-zap
        uses: actions/cache@v4
        with:
          path: /tmp/zap-cache
          key: zap-docker-image-${{ runner.os }}
          restore-keys: |
            zap-docker-image-${{ runner.os }}

      # 3. Create a Writable Directory for ZAP
      - name: Prepare Work Directory
        run: |
          mkdir -p zap-workdir
          chmod 777 zap-workdir

      # 4. Run ZAP Baseline Scan (allow step to continue on failure)
      - name: Run DAST Scan
        continue-on-error: true
        timeout-minutes: 30  # Add a timeout for the scan
        run: |
          docker run --rm \
          -v $(pwd)/zap-workdir:/zap/wrk \
          -t ghcr.io/zaproxy/zaproxy zap-baseline.py \
          -t ${{ env.TARGET_URL }} \
          -r zap_report.html \
          -w zap_report.json || true

      # 5. Upload ZAP Scan Reports as Artifact (runs regardless of scan result)
      - name: Upload DAST Scan Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Dast_Scan_Reports
          path: zap-workdir/
          retention-days: ${{ env.RETENTION_DAYS }}

      # 6. Analyze ZAP Scan Report and Notify Teams
      # - name: Notify via Microsoft Teams on Vulnerability Detection
      #   if: always()
      #   run: |
      #     if grep -q "FAIL-NEW" zap-workdir/zap_report.html; then
      #       curl -H 'Content-Type: application/json' -d '{
      #         "title": "ZAP Scan Vulnerability Detected",
      #         "text": "Vulnerabilities have been detected during the ZAP scan. Please review the report.\n\n**Vulnerability Count**: $(grep -o 'FAIL-NEW' zap-workdir/zap_report.html | wc -l)\n**Report Link**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      #       }' "${{ env.TEAMS_WEBHOOK_URL }}"
      #     else
      #       echo "No vulnerabilities detected. Teams notification not sent."
      #     fi